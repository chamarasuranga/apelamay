# Separate BFF Pipeline
# Triggers only when BFF or client files change

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - BFF/**
      - client/**

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  basePrefix: 'apelamay'
  azureSubscription: 'Azure-Apelamay-Int'
  nodeVersion: '20.x'

stages:
  - stage: Build
    displayName: 'Build BFF and React'
    jobs:
      - job: BuildBFF
        displayName: 'Build and Package'
        steps:          
          - task: NodeTool@0
            displayName: 'Install Node.js $(nodeVersion)'
            inputs:
              versionSpec: '$(nodeVersion)'

          - script: |
              echo "Installing dependencies..."
              cd client
              npm ci
            displayName: 'Install npm packages'          
          - script: |
              echo "Building React application..."
              cd client
              npm run build -- --mode production || echo "Build completed with warnings"
              echo "React build completed"
              ls -la ../BFF/wwwroot
            displayName: 'Build React App'
          - task: UseDotNet@2
            displayName: 'Use .NET 9.0'
            inputs:
              version: '9.0.x'

          - task: DotNetCoreCLI@2
            displayName: 'Restore BFF'
            inputs:
              command: 'restore'
              projects: 'BFF/BFF.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build BFF'
            inputs:
              command: 'build'
              projects: 'BFF/BFF.csproj'
              arguments: '--configuration $(buildConfiguration) --no-restore'

          - task: DotNetCoreCLI@2
            displayName: 'Publish BFF'
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: 'BFF/BFF.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) --no-build'
              zipAfterPublish: true

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'bff-drop'

  # Deploy to INT Environment
  - stage: DeployINT
    displayName: 'Deploy to INT'
    dependsOn: Build
    condition: |
      and(
        succeeded(),
        or(
          eq(variables['Build.SourceBranch'], 'refs/heads/develop'),
          eq(variables['Build.SourceBranch'], 'refs/heads/main')
        )
      )
    variables:
      environment: 'int'
      appName: '$(basePrefix)-$(environment)-bff'
    jobs:
      - deployment: DeployBFF
        displayName: 'Deploy BFF to INT'
        environment: 'INT'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: 'Download BFF Artifact'
                  inputs:
                    artifactName: 'bff-drop'
                    downloadPath: '$(Pipeline.Workspace)/bff-drop'

                - task: AzureWebApp@1
                  displayName: 'Deploy to Azure App Service'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    appType: 'webApp'
                    appName: '$(appName)'
                    package: '$(Pipeline.Workspace)/bff-drop/*.zip'
                    deploymentMethod: 'zipDeploy'

                - task: PowerShell@2
                  displayName: 'Health Check'
                  inputs:
                    targetType: 'inline'
                    script: |
                      Start-Sleep -Seconds 30
                      $response = Invoke-WebRequest -Uri "https://$(appName).azurewebsites.net" -UseBasicParsing
                      if ($response.StatusCode -eq 200) {
                        Write-Host "‚úÖ BFF deployed successfully to INT"
                        Write-Host "üåê URL: https://$(appName).azurewebsites.net"
                      } else {
                        Write-Error "‚ùå Health check failed"
                        exit 1
                      }

  # Deploy to UAT Environment
  - stage: DeployUAT
    displayName: 'Deploy to UAT'
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/uat'))
    variables:
      environment: 'uat'
      appName: '$(basePrefix)-$(environment)-bff'
    jobs:
      - deployment: DeployBFF
        displayName: 'Deploy BFF to UAT'
        environment: 'UAT'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: 'Download BFF Artifact'
                  inputs:
                    artifactName: 'bff-drop'
                    downloadPath: '$(Pipeline.Workspace)/bff-drop'

                - task: AzureWebApp@1
                  displayName: 'Deploy to Azure App Service'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    appType: 'webApp'
                    appName: '$(appName)'
                    package: '$(Pipeline.Workspace)/bff-drop/*.zip'
                    deploymentMethod: 'zipDeploy'

                - task: PowerShell@2
                  displayName: 'Health Check'
                  inputs:
                    targetType: 'inline'
                    script: |
                      Start-Sleep -Seconds 30
                      $response = Invoke-WebRequest -Uri "https://$(appName).azurewebsites.net" -UseBasicParsing
                      if ($response.StatusCode -eq 200) {
                        Write-Host "‚úÖ BFF deployed successfully to UAT"
                        Write-Host "üåê URL: https://$(appName).azurewebsites.net"
                      } else {
                        Write-Error "‚ùå Health check failed"
                        exit 1
                      }

  # Deploy to PROD Environment
  - stage: DeployPROD
    displayName: 'Deploy to PROD'
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    variables:
      environment: 'prod'
      appName: '$(basePrefix)-$(environment)-bff'
    jobs:
      - deployment: DeployBFF
        displayName: 'Deploy BFF to PROD'
        environment: 'Production'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: 'Download BFF Artifact'
                  inputs:
                    artifactName: 'bff-drop'
                    downloadPath: '$(Pipeline.Workspace)/bff-drop'

                - task: AzureWebApp@1
                  displayName: 'Deploy to Azure App Service'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    appType: 'webApp'
                    appName: '$(appName)'
                    package: '$(Pipeline.Workspace)/bff-drop/*.zip'
                    deploymentMethod: 'zipDeploy'

                - task: PowerShell@2
                  displayName: 'Health Check'
                  inputs:
                    targetType: 'inline'
                    script: |
                      Start-Sleep -Seconds 30
                      $response = Invoke-WebRequest -Uri "https://$(appName).azurewebsites.net" -UseBasicParsing
                      if ($response.StatusCode -eq 200) {
                        Write-Host "‚úÖ BFF deployed successfully to PROD"
                        Write-Host "üåê URL: https://$(appName).azurewebsites.net"
                      } else {
                        Write-Error "‚ùå Health check failed"
                        exit 1
                      }
